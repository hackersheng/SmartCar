###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.3.8024/W32 for ARM        12/Jul/2016  22:03:02
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\app\Steering_Control.c
#    Command line =  
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\app\Steering_Control.c
#        -D LPLD_K60 -D USE_K60D10 -lCN
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\FLASH\List\
#        -lB
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\FLASH\List\
#        -o
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\FLASH\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        D:\IAR\arm\INC\c\DLib_Config_Normal.h -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\..\app\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\..\..\..\lib\CPU\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\..\..\..\lib\common\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\..\..\..\lib\LPLD\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\..\..\..\lib\LPLD\HW\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\..\..\..\lib\LPLD\FUNC\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\..\..\..\lib\FatFs\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\..\..\..\lib\FatFs\option\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\..\..\..\lib\USB\common\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\..\..\..\lib\USB\driver\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\..\..\..\lib\USB\descriptor\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\..\..\..\lib\USB\class\
#        -Ol -I D:\IAR\arm\CMSIS\Include\ -D ARM_MATH_CM4
#    List file    =  
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\FLASH\List\Steering_Control.lst
#    Object file  =  
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\FLASH\Obj\Steering_Control.o
#
###############################################################################

C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\app\Steering_Control.c
      1          #include "include.h"
      2          /*后来加的变量*/
      3          #define white 255
      4          #define black 0
      5          
      6          
      7          #define ROW_MAX 60
      8          #define COL_MAX 80
      9          
     10          /* 80*60
     11          */
     12          
     13          

   \                                 In section .bss, align 4
     14          uint8 Left_Valid[ROW_MAX];
   \                     Left_Valid:
   \   00000000                      DS8 60

   \                                 In section .bss, align 4
     15          uint8 Right_Valid[ROW_MAX];
   \                     Right_Valid:
   \   00000000                      DS8 60
     16          

   \                                 In section .bss, align 1
     17          uint8 Left_turnmax=0;
   \                     Left_turnmax:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     18          uint8 Right_turnmax=0;
   \                     Right_turnmax:
   \   00000000                      DS8 1
     19          

   \                                 In section .bss, align 1
     20          uint8 straight_cross=0;
   \                     straight_cross:
   \   00000000                      DS8 1
     21          

   \                                 In section .bss, align 1
     22          uint8 Left_flag=0,Right_flag=0;
   \                     Left_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     Right_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
     23          int turn=0;
   \                     turn:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     24          int turn1=0;
   \                     turn1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     25          int turn2=0;
   \                     turn2:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     26          int last_turn=0;
   \                     last_turn:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     27          int D_value=0;
   \                     D_value:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     28          int D_value_old=0;
   \                     D_value_old:
   \   00000000                      DS8 4
     29          

   \                                 In section .bss, align 4
     30          FTM_InitTypeDef steering_init_struct;
   \                     steering_init_struct:
   \   00000000                      DS8 28
     31          uint8 m_abs(int m);
     32          void  search_line(void);
     33          

   \                                 In section .text, align 2, keep-with-next
     34          void steering_init()
     35          {
   \                     steering_init: (+1)
   \   00000000   0xB5E0             PUSH     {R5-R7,LR}
     36            steering_init_struct.FTM_Ftmx = FTM2;	
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable2  ;; 0x400b8000
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable2_1
   \   0000000A   0x6008             STR      R0,[R1, #+0]
     37            steering_init_struct.FTM_Mode = FTM_MODE_PWM;	
   \   0000000C   0x2001             MOVS     R0,#+1
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable2_1
   \   00000012   0x7108             STRB     R0,[R1, #+4]
     38            steering_init_struct.FTM_PwmFreq = 50;
   \   00000014   0x2032             MOVS     R0,#+50
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable2_1
   \   0000001A   0x6088             STR      R0,[R1, #+8]
     39            
     40            LPLD_FTM_Init(steering_init_struct);
   \   0000001C   0x.... 0x....      LDR.W    R1,??DataTable2_1
   \   00000020   0xB084             SUB      SP,SP,#+16
   \   00000022   0x4668             MOV      R0,SP
   \   00000024   0x221C             MOVS     R2,#+28
   \   00000026   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000002A   0xBC0F             POP      {R0-R3}
   \   0000002C   0x.... 0x....      BL       LPLD_FTM_Init
     41            
     42            LPLD_FTM_PWM_Enable(FTM2, 
     43                                FTM_Ch1, 
     44                                steering_middle,  
     45                                PTB19, 
     46                                ALIGN_LEFT       
     47                                  );  
   \   00000030   0x2028             MOVS     R0,#+40
   \   00000032   0x9000             STR      R0,[SP, #+0]
   \   00000034   0x2333             MOVS     R3,#+51
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable2_2
   \   0000003A   0x6802             LDR      R2,[R0, #+0]
   \   0000003C   0x2101             MOVS     R1,#+1
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable2  ;; 0x400b8000
   \   00000042   0x.... 0x....      BL       LPLD_FTM_PWM_Enable
     48          }
   \   00000046   0xBD07             POP      {R0-R2,PC}       ;; return
     49          
     50          

   \                                 In section .text, align 2, keep-with-next
     51          void steering_control(void)
     52          {
   \                     steering_control: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
     53            search_line();
   \   00000002   0x.... 0x....      BL       search_line
     54            
     55            
     56            last_turn=turn;
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable2_3
   \   0000000A   0x6800             LDR      R0,[R0, #+0]
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable2_4
   \   00000010   0x6008             STR      R0,[R1, #+0]
     57            turn1=Center_Line[39]-40;
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable2_5
   \   00000016   0xF8D0 0x009C      LDR      R0,[R0, #+156]
   \   0000001A   0x3828             SUBS     R0,R0,#+40
   \   0000001C   0x.... 0x....      LDR.W    R1,??DataTable2_6
   \   00000020   0x6008             STR      R0,[R1, #+0]
     58            turn2=Center_Line[30]-40;
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable2_5
   \   00000026   0x6F80             LDR      R0,[R0, #+120]
   \   00000028   0x3828             SUBS     R0,R0,#+40
   \   0000002A   0x.... 0x....      LDR.W    R1,??DataTable2_7
   \   0000002E   0x6008             STR      R0,[R1, #+0]
     59            turn=(turn1*8+turn2*2)/10;
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable2_6
   \   00000034   0x6800             LDR      R0,[R0, #+0]
   \   00000036   0x.... 0x....      LDR.W    R1,??DataTable2_7
   \   0000003A   0x6809             LDR      R1,[R1, #+0]
   \   0000003C   0x0049             LSLS     R1,R1,#+1
   \   0000003E   0xEB11 0x00C0      ADDS     R0,R1,R0, LSL #+3
   \   00000042   0x210A             MOVS     R1,#+10
   \   00000044   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000048   0x.... 0x....      LDR.W    R1,??DataTable2_3
   \   0000004C   0x6008             STR      R0,[R1, #+0]
     60            
     61            D_value=(-turn);
   \   0000004E   0x.... 0x....      LDR.W    R0,??DataTable2_3
   \   00000052   0x6800             LDR      R0,[R0, #+0]
   \   00000054   0x4240             RSBS     R0,R0,#+0
   \   00000056   0x.... 0x....      LDR.W    R1,??DataTable2_8
   \   0000005A   0x6008             STR      R0,[R1, #+0]
     62            
     63            if(turn_left&&turn_right)
   \   0000005C   0x.... 0x....      LDR.W    R0,??DataTable2_9
   \   00000060   0x7800             LDRB     R0,[R0, #+0]
   \   00000062   0x2800             CMP      R0,#+0
   \   00000064   0xD022             BEQ.N    ??steering_control_0
   \   00000066   0x.... 0x....      LDR.W    R0,??DataTable2_10
   \   0000006A   0x7800             LDRB     R0,[R0, #+0]
   \   0000006C   0x2800             CMP      R0,#+0
   \   0000006E   0xD01D             BEQ.N    ??steering_control_0
     64            steering_out=steering_middle-(D_value*(steering_p+20));//+(D_value-D_value_old*steering_d));
   \   00000070   0x.... 0x....      LDR.W    R0,??DataTable2_2
   \   00000074   0x6800             LDR      R0,[R0, #+0]
   \   00000076   0x.... 0x....      BL       __aeabi_i2f
   \   0000007A   0x0004             MOVS     R4,R0
   \   0000007C   0x.... 0x....      LDR.W    R0,??DataTable2_8
   \   00000080   0x6800             LDR      R0,[R0, #+0]
   \   00000082   0x.... 0x....      BL       __aeabi_i2f
   \   00000086   0x0005             MOVS     R5,R0
   \   00000088   0x.... 0x....      LDR.W    R0,??DataTable2_11
   \   0000008C   0x6801             LDR      R1,[R0, #+0]
   \   0000008E   0x.... 0x....      LDR.W    R0,??DataTable2_12  ;; 0x41a00000
   \   00000092   0x.... 0x....      BL       __aeabi_fadd
   \   00000096   0x0029             MOVS     R1,R5
   \   00000098   0x.... 0x....      BL       __aeabi_fmul
   \   0000009C   0x0001             MOVS     R1,R0
   \   0000009E   0x0020             MOVS     R0,R4
   \   000000A0   0x.... 0x....      BL       __aeabi_fsub
   \   000000A4   0x.... 0x....      LDR.W    R1,??DataTable2_13
   \   000000A8   0x6008             STR      R0,[R1, #+0]
   \   000000AA   0xE016             B.N      ??steering_control_1
     65            
     66            else
     67               steering_out=steering_middle-(D_value*(steering_p));//+(D_value-D_value_old*steering_d));
   \                     ??steering_control_0: (+1)
   \   000000AC   0x.... 0x....      LDR.W    R0,??DataTable2_2
   \   000000B0   0x6800             LDR      R0,[R0, #+0]
   \   000000B2   0x.... 0x....      BL       __aeabi_i2f
   \   000000B6   0x0004             MOVS     R4,R0
   \   000000B8   0x.... 0x....      LDR.W    R0,??DataTable2_8
   \   000000BC   0x6800             LDR      R0,[R0, #+0]
   \   000000BE   0x.... 0x....      BL       __aeabi_i2f
   \   000000C2   0x.... 0x....      LDR.W    R1,??DataTable2_11
   \   000000C6   0x6809             LDR      R1,[R1, #+0]
   \   000000C8   0x.... 0x....      BL       __aeabi_fmul
   \   000000CC   0x0001             MOVS     R1,R0
   \   000000CE   0x0020             MOVS     R0,R4
   \   000000D0   0x.... 0x....      BL       __aeabi_fsub
   \   000000D4   0x.... 0x....      LDR.W    R1,??DataTable2_13
   \   000000D8   0x6008             STR      R0,[R1, #+0]
     68            
     69            
     70             if(steering_out<=steering_left)
   \                     ??steering_control_1: (+1)
   \   000000DA   0x.... 0x....      LDR.W    R0,??DataTable2_14
   \   000000DE   0x6800             LDR      R0,[R0, #+0]
   \   000000E0   0x.... 0x....      BL       __aeabi_i2f
   \   000000E4   0x.... 0x....      LDR.W    R1,??DataTable2_13
   \   000000E8   0x6809             LDR      R1,[R1, #+0]
   \   000000EA   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000000EE   0xD807             BHI.N    ??steering_control_2
     71            {steering_out = steering_left;}
   \   000000F0   0x.... 0x....      LDR.W    R0,??DataTable2_14
   \   000000F4   0x6800             LDR      R0,[R0, #+0]
   \   000000F6   0x.... 0x....      BL       __aeabi_i2f
   \   000000FA   0x.... 0x....      LDR.W    R1,??DataTable2_13
   \   000000FE   0x6008             STR      R0,[R1, #+0]
     72            if(steering_out>=steering_right)
   \                     ??steering_control_2: (+1)
   \   00000100   0x.... 0x....      LDR.W    R0,??DataTable2_15
   \   00000104   0x6800             LDR      R0,[R0, #+0]
   \   00000106   0x.... 0x....      BL       __aeabi_i2f
   \   0000010A   0x0001             MOVS     R1,R0
   \   0000010C   0x.... 0x....      LDR.W    R0,??DataTable2_13
   \   00000110   0x6800             LDR      R0,[R0, #+0]
   \   00000112   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000116   0xD807             BHI.N    ??steering_control_3
     73            {steering_out = steering_right;}
   \   00000118   0x.... 0x....      LDR.W    R0,??DataTable2_15
   \   0000011C   0x6800             LDR      R0,[R0, #+0]
   \   0000011E   0x.... 0x....      BL       __aeabi_i2f
   \   00000122   0x.... 0x....      LDR.W    R1,??DataTable2_13
   \   00000126   0x6008             STR      R0,[R1, #+0]
     74             LCD_Write_Float_Dot(85,0,turn,2);
   \                     ??steering_control_3: (+1)
   \   00000128   0x2302             MOVS     R3,#+2
   \   0000012A   0x001C             MOVS     R4,R3
   \   0000012C   0x.... 0x....      LDR.W    R0,??DataTable2_3
   \   00000130   0x6800             LDR      R0,[R0, #+0]
   \   00000132   0x.... 0x....      BL       __aeabi_i2f
   \   00000136   0x0002             MOVS     R2,R0
   \   00000138   0x0023             MOVS     R3,R4
   \   0000013A   0x2100             MOVS     R1,#+0
   \   0000013C   0x2055             MOVS     R0,#+85
   \   0000013E   0x.... 0x....      BL       LCD_Write_Float_Dot
     75             
     76             
     77           LCD_Write_Float_Dot(108,2,Right_Line[30],0);
   \   00000142   0x2300             MOVS     R3,#+0
   \   00000144   0x001C             MOVS     R4,R3
   \   00000146   0x.... 0x....      LDR.W    R0,??DataTable2_16
   \   0000014A   0x6F80             LDR      R0,[R0, #+120]
   \   0000014C   0x.... 0x....      BL       __aeabi_i2f
   \   00000150   0x0002             MOVS     R2,R0
   \   00000152   0x0023             MOVS     R3,R4
   \   00000154   0x2102             MOVS     R1,#+2
   \   00000156   0x206C             MOVS     R0,#+108
   \   00000158   0x.... 0x....      BL       LCD_Write_Float_Dot
     78           LCD_Write_Float_Dot(85,2,Left_Line[30],0);
   \   0000015C   0x2300             MOVS     R3,#+0
   \   0000015E   0x001C             MOVS     R4,R3
   \   00000160   0x.... 0x....      LDR.W    R0,??DataTable2_17
   \   00000164   0x6F80             LDR      R0,[R0, #+120]
   \   00000166   0x.... 0x....      BL       __aeabi_i2f
   \   0000016A   0x0002             MOVS     R2,R0
   \   0000016C   0x0023             MOVS     R3,R4
   \   0000016E   0x2102             MOVS     R1,#+2
   \   00000170   0x2055             MOVS     R0,#+85
   \   00000172   0x.... 0x....      BL       LCD_Write_Float_Dot
     79           
     80              LCD_Write_Float_Dot(108,3,Right_Line[39],0);
   \   00000176   0x2300             MOVS     R3,#+0
   \   00000178   0x001C             MOVS     R4,R3
   \   0000017A   0x.... 0x....      LDR.W    R0,??DataTable2_16
   \   0000017E   0xF8D0 0x009C      LDR      R0,[R0, #+156]
   \   00000182   0x.... 0x....      BL       __aeabi_i2f
   \   00000186   0x0002             MOVS     R2,R0
   \   00000188   0x0023             MOVS     R3,R4
   \   0000018A   0x2103             MOVS     R1,#+3
   \   0000018C   0x206C             MOVS     R0,#+108
   \   0000018E   0x.... 0x....      BL       LCD_Write_Float_Dot
     81            LCD_Write_Float_Dot(85,3,Left_Line[39],0);
   \   00000192   0x2300             MOVS     R3,#+0
   \   00000194   0x001C             MOVS     R4,R3
   \   00000196   0x.... 0x....      LDR.W    R0,??DataTable2_17
   \   0000019A   0xF8D0 0x009C      LDR      R0,[R0, #+156]
   \   0000019E   0x.... 0x....      BL       __aeabi_i2f
   \   000001A2   0x0002             MOVS     R2,R0
   \   000001A4   0x0023             MOVS     R3,R4
   \   000001A6   0x2103             MOVS     R1,#+3
   \   000001A8   0x2055             MOVS     R0,#+85
   \   000001AA   0x.... 0x....      BL       LCD_Write_Float_Dot
     82            
     83          //  for(uint8 i=59;i>19;i--)
     84          //  {
     85          //    LCD_PutPixel(i,Center_Line[i]); 
     86          //    LCD_PutPixel(i,Left_Line[i]); 
     87          //    LCD_PutPixel(i,Right_Line[i]); 
     88          //  }
     89             //   steering_err=40-(right[8]+left[8])/2;
     90            LPLD_FTM_PWM_ChangeDuty(FTM2, FTM_Ch1, (int)steering_out);
   \   000001AE   0x.... 0x....      LDR.W    R0,??DataTable2_13
   \   000001B2   0x6800             LDR      R0,[R0, #+0]
   \   000001B4   0x.... 0x....      BL       __aeabi_f2iz
   \   000001B8   0x0002             MOVS     R2,R0
   \   000001BA   0x2101             MOVS     R1,#+1
   \   000001BC   0x.... 0x....      LDR.W    R0,??DataTable2  ;; 0x400b8000
   \   000001C0   0x.... 0x....      BL       LPLD_FTM_PWM_ChangeDuty
     91            
     92            
     93            turn_right=0;
   \   000001C4   0x2000             MOVS     R0,#+0
   \   000001C6   0x.... 0x....      LDR.W    R1,??DataTable2_10
   \   000001CA   0x7008             STRB     R0,[R1, #+0]
     94            turn_left=0;
   \   000001CC   0x2000             MOVS     R0,#+0
   \   000001CE   0x.... 0x....      LDR.W    R1,??DataTable2_9
   \   000001D2   0x7008             STRB     R0,[R1, #+0]
     95          straight_cross=0;
   \   000001D4   0x2000             MOVS     R0,#+0
   \   000001D6   0x.... 0x....      LDR.W    R1,??DataTable2_18
   \   000001DA   0x7008             STRB     R0,[R1, #+0]
     96          }
   \   000001DC   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 2, keep-with-next
     97          void  search_line(void)
     98          {
   \                     search_line: (+1)
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
     99          
    100            uint8 max_row=0;
   \   00000004   0x2000             MOVS     R0,#+0
    101            uint8 cross_flag=0;
   \   00000006   0x2100             MOVS     R1,#+0
    102          
    103            
    104            for(uint8 y=59;y>19;y--)
   \   00000008   0x203B             MOVS     R0,#+59
   \   0000000A   0xE02B             B.N      ??search_line_0
    105            {
    106              
    107              Left_flag=0;
    108              Right_flag=0;
    109              
    110              Left_Line[y]=1;//初始化左黑线为1
    111              Right_Line[y]=78;//初始化右黑线为1
    112              //左
    113              for(uint8 xl=40;xl>1;xl--)
    114              {
    115                if(Img[y][xl]==white&&Img[y][xl-2]==black)
    116                {
    117                  Left_Line[y]=xl+2;
    118                  Left_flag=1;
    119                  break;
    120                }
    121              
    122              }
    123              
    124          
    125              //右
    126              for(uint8 xr=40;xr<78;xr++)
    127              {
    128                if(Img[y][xr]==white&&Img[y][xr+2]==black)
    129                {
    130                  Right_Line[y]=xr-2;
    131                  Right_flag=1;
    132                  break;
    133                }
    134              }
    135              
    136              if(y>56)
    137              {
    138                if(!Right_flag&&!Left_flag)
    139                  cross_flag=1;
    140              }
    141              
    142             if(Right_flag&&Left_flag)
    143               Center_Line[y]=(Right_Line[y]+Left_Line[y])/2;
    144              
    145                // else if(!Right_flag&&!Left_flag)//直入十字
    146              else if(Right_Line[y]-Left_Line[y]>60)
    147             {
    148               straight_cross++;
    149             }
    150              
    151             else if(!Left_flag&&Right_flag&&!straight_cross)//左转
    152             {
    153               Center_Line[y]=Right_Line[y]-(Right_Line[y+1]-Center_Line[y+1]);
    154               turn_left=1;
    155             }
    156             else if(Left_flag&&!Right_flag&&!straight_cross)//右转
   \                     ??search_line_1: (+1)
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable2_19
   \   00000010   0x7809             LDRB     R1,[R1, #+0]
   \   00000012   0x2900             CMP      R1,#+0
   \   00000014   0xD025             BEQ.N    ??search_line_2
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable2_20
   \   0000001A   0x7809             LDRB     R1,[R1, #+0]
   \   0000001C   0x2900             CMP      R1,#+0
   \   0000001E   0xD120             BNE.N    ??search_line_2
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable2_18
   \   00000024   0x7809             LDRB     R1,[R1, #+0]
   \   00000026   0x2900             CMP      R1,#+0
   \   00000028   0xD11B             BNE.N    ??search_line_2
    157             {
    158               Center_Line[y]=Left_Line[y]+(Center_Line[y+1]-Left_Line[y+1]);
   \   0000002A   0x.... 0x....      LDR.W    R1,??DataTable2_17
   \   0000002E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000030   0xF851 0x1020      LDR      R1,[R1, R0, LSL #+2]
   \   00000034   0x.... 0x....      LDR.W    R2,??DataTable2_5
   \   00000038   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003A   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   0000003E   0x6852             LDR      R2,[R2, #+4]
   \   00000040   0x1851             ADDS     R1,R2,R1
   \   00000042   0x.... 0x....      LDR.W    R2,??DataTable2_17
   \   00000046   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000048   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   0000004C   0x6852             LDR      R2,[R2, #+4]
   \   0000004E   0x1A89             SUBS     R1,R1,R2
   \   00000050   0x.... 0x....      LDR.W    R2,??DataTable2_5
   \   00000054   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000056   0xF842 0x1020      STR      R1,[R2, R0, LSL #+2]
    159               turn_right=1;
   \   0000005A   0x2101             MOVS     R1,#+1
   \   0000005C   0x.... 0x....      LDR.W    R2,??DataTable2_10
   \   00000060   0x7011             STRB     R1,[R2, #+0]
    160             }
   \                     ??search_line_2: (+1)
   \   00000062   0x1E40             SUBS     R0,R0,#+1
   \                     ??search_line_0: (+1)
   \   00000064   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000066   0x2814             CMP      R0,#+20
   \   00000068   0xF2C0 0x80B7      BLT.W    ??search_line_3
   \   0000006C   0x2100             MOVS     R1,#+0
   \   0000006E   0x.... 0x....      LDR.W    R2,??DataTable2_19
   \   00000072   0x7011             STRB     R1,[R2, #+0]
   \   00000074   0x2100             MOVS     R1,#+0
   \   00000076   0x.... 0x....      LDR.W    R2,??DataTable2_20
   \   0000007A   0x7011             STRB     R1,[R2, #+0]
   \   0000007C   0x2101             MOVS     R1,#+1
   \   0000007E   0x.... 0x....      LDR.W    R2,??DataTable2_17
   \   00000082   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000084   0xF842 0x1020      STR      R1,[R2, R0, LSL #+2]
   \   00000088   0x214E             MOVS     R1,#+78
   \   0000008A   0x.... 0x....      LDR.W    R2,??DataTable2_16
   \   0000008E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000090   0xF842 0x1020      STR      R1,[R2, R0, LSL #+2]
   \   00000094   0x2128             MOVS     R1,#+40
   \   00000096   0xE000             B.N      ??search_line_4
   \                     ??search_line_5: (+1)
   \   00000098   0x1E49             SUBS     R1,R1,#+1
   \                     ??search_line_4: (+1)
   \   0000009A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000009C   0x2902             CMP      R1,#+2
   \   0000009E   0xDB1D             BLT.N    ??search_line_6
   \   000000A0   0x.... 0x....      LDR.W    R2,??DataTable2_21
   \   000000A4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000A6   0x2350             MOVS     R3,#+80
   \   000000A8   0xFB03 0x2200      MLA      R2,R3,R0,R2
   \   000000AC   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000AE   0x5C8A             LDRB     R2,[R1, R2]
   \   000000B0   0x2AFF             CMP      R2,#+255
   \   000000B2   0xD1F1             BNE.N    ??search_line_5
   \   000000B4   0x....             LDR.N    R2,??DataTable2_21
   \   000000B6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000B8   0x2350             MOVS     R3,#+80
   \   000000BA   0xFB03 0x2200      MLA      R2,R3,R0,R2
   \   000000BE   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000C0   0x188A             ADDS     R2,R1,R2
   \   000000C2   0xF812 0x2C02      LDRB     R2,[R2, #-2]
   \   000000C6   0x2A00             CMP      R2,#+0
   \   000000C8   0xD1E6             BNE.N    ??search_line_5
   \   000000CA   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000CC   0x1C89             ADDS     R1,R1,#+2
   \   000000CE   0x....             LDR.N    R2,??DataTable2_17
   \   000000D0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000D2   0xF842 0x1020      STR      R1,[R2, R0, LSL #+2]
   \   000000D6   0x2101             MOVS     R1,#+1
   \   000000D8   0x....             LDR.N    R2,??DataTable2_19
   \   000000DA   0x7011             STRB     R1,[R2, #+0]
   \                     ??search_line_6: (+1)
   \   000000DC   0x2128             MOVS     R1,#+40
   \   000000DE   0xE000             B.N      ??search_line_7
   \                     ??search_line_8: (+1)
   \   000000E0   0x1C49             ADDS     R1,R1,#+1
   \                     ??search_line_7: (+1)
   \   000000E2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000E4   0x294E             CMP      R1,#+78
   \   000000E6   0xDA1B             BGE.N    ??search_line_9
   \   000000E8   0x....             LDR.N    R2,??DataTable2_21
   \   000000EA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000EC   0x2350             MOVS     R3,#+80
   \   000000EE   0xFB03 0x2200      MLA      R2,R3,R0,R2
   \   000000F2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000F4   0x5C8A             LDRB     R2,[R1, R2]
   \   000000F6   0x2AFF             CMP      R2,#+255
   \   000000F8   0xD1F2             BNE.N    ??search_line_8
   \   000000FA   0x....             LDR.N    R2,??DataTable2_21
   \   000000FC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000FE   0x2350             MOVS     R3,#+80
   \   00000100   0xFB03 0x2200      MLA      R2,R3,R0,R2
   \   00000104   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000106   0x188A             ADDS     R2,R1,R2
   \   00000108   0x7892             LDRB     R2,[R2, #+2]
   \   0000010A   0x2A00             CMP      R2,#+0
   \   0000010C   0xD1E8             BNE.N    ??search_line_8
   \   0000010E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000110   0x1E89             SUBS     R1,R1,#+2
   \   00000112   0x....             LDR.N    R2,??DataTable2_16
   \   00000114   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000116   0xF842 0x1020      STR      R1,[R2, R0, LSL #+2]
   \   0000011A   0x2101             MOVS     R1,#+1
   \   0000011C   0x....             LDR.N    R2,??DataTable2_20
   \   0000011E   0x7011             STRB     R1,[R2, #+0]
   \                     ??search_line_9: (+1)
   \   00000120   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000122   0x2839             CMP      R0,#+57
   \   00000124   0xDB08             BLT.N    ??search_line_10
   \   00000126   0x....             LDR.N    R1,??DataTable2_20
   \   00000128   0x7809             LDRB     R1,[R1, #+0]
   \   0000012A   0x2900             CMP      R1,#+0
   \   0000012C   0xD104             BNE.N    ??search_line_10
   \   0000012E   0x....             LDR.N    R1,??DataTable2_19
   \   00000130   0x7809             LDRB     R1,[R1, #+0]
   \   00000132   0x2900             CMP      R1,#+0
   \   00000134   0xD100             BNE.N    ??search_line_10
   \   00000136   0x2101             MOVS     R1,#+1
   \                     ??search_line_10: (+1)
   \   00000138   0x....             LDR.N    R1,??DataTable2_20
   \   0000013A   0x7809             LDRB     R1,[R1, #+0]
   \   0000013C   0x2900             CMP      R1,#+0
   \   0000013E   0xD014             BEQ.N    ??search_line_11
   \   00000140   0x....             LDR.N    R1,??DataTable2_19
   \   00000142   0x7809             LDRB     R1,[R1, #+0]
   \   00000144   0x2900             CMP      R1,#+0
   \   00000146   0xD010             BEQ.N    ??search_line_11
   \   00000148   0x....             LDR.N    R1,??DataTable2_16
   \   0000014A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000014C   0xF851 0x1020      LDR      R1,[R1, R0, LSL #+2]
   \   00000150   0x....             LDR.N    R2,??DataTable2_17
   \   00000152   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000154   0xF852 0x2020      LDR      R2,[R2, R0, LSL #+2]
   \   00000158   0x1851             ADDS     R1,R2,R1
   \   0000015A   0x2202             MOVS     R2,#+2
   \   0000015C   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   00000160   0x....             LDR.N    R2,??DataTable2_5
   \   00000162   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000164   0xF842 0x1020      STR      R1,[R2, R0, LSL #+2]
   \   00000168   0xE77B             B.N      ??search_line_2
   \                     ??search_line_11: (+1)
   \   0000016A   0x....             LDR.N    R1,??DataTable2_16
   \   0000016C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000016E   0xF851 0x1020      LDR      R1,[R1, R0, LSL #+2]
   \   00000172   0x....             LDR.N    R2,??DataTable2_17
   \   00000174   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000176   0xF852 0x2020      LDR      R2,[R2, R0, LSL #+2]
   \   0000017A   0x1A89             SUBS     R1,R1,R2
   \   0000017C   0x293D             CMP      R1,#+61
   \   0000017E   0xDB05             BLT.N    ??search_line_12
   \   00000180   0x....             LDR.N    R1,??DataTable2_18
   \   00000182   0x7809             LDRB     R1,[R1, #+0]
   \   00000184   0x1C49             ADDS     R1,R1,#+1
   \   00000186   0x....             LDR.N    R2,??DataTable2_18
   \   00000188   0x7011             STRB     R1,[R2, #+0]
   \   0000018A   0xE76A             B.N      ??search_line_2
   \                     ??search_line_12: (+1)
   \   0000018C   0x....             LDR.N    R1,??DataTable2_19
   \   0000018E   0x7809             LDRB     R1,[R1, #+0]
   \   00000190   0x2900             CMP      R1,#+0
   \   00000192   0xF47F 0xAF3B      BNE.W    ??search_line_1
   \   00000196   0x....             LDR.N    R1,??DataTable2_20
   \   00000198   0x7809             LDRB     R1,[R1, #+0]
   \   0000019A   0x2900             CMP      R1,#+0
   \   0000019C   0xF43F 0xAF36      BEQ.W    ??search_line_1
   \   000001A0   0x....             LDR.N    R1,??DataTable2_18
   \   000001A2   0x7809             LDRB     R1,[R1, #+0]
   \   000001A4   0x2900             CMP      R1,#+0
   \   000001A6   0xF47F 0xAF31      BNE.W    ??search_line_1
   \   000001AA   0x....             LDR.N    R1,??DataTable2_16
   \   000001AC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001AE   0xF851 0x1020      LDR      R1,[R1, R0, LSL #+2]
   \   000001B2   0x....             LDR.N    R2,??DataTable2_16
   \   000001B4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001B6   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   000001BA   0x6852             LDR      R2,[R2, #+4]
   \   000001BC   0x1A89             SUBS     R1,R1,R2
   \   000001BE   0x....             LDR.N    R2,??DataTable2_5
   \   000001C0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001C2   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   000001C6   0x6852             LDR      R2,[R2, #+4]
   \   000001C8   0x1851             ADDS     R1,R2,R1
   \   000001CA   0x....             LDR.N    R2,??DataTable2_5
   \   000001CC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001CE   0xF842 0x1020      STR      R1,[R2, R0, LSL #+2]
   \   000001D2   0x2101             MOVS     R1,#+1
   \   000001D4   0x....             LDR.N    R2,??DataTable2_9
   \   000001D6   0x7011             STRB     R1,[R2, #+0]
   \   000001D8   0xE743             B.N      ??search_line_2
    161          
    162             
    163             
    164             
    165          
    166            }
    167            
    168            
    169            if(straight_cross>3)
   \                     ??search_line_3: (+1)
   \   000001DA   0x....             LDR.N    R0,??DataTable2_18
   \   000001DC   0x7800             LDRB     R0,[R0, #+0]
   \   000001DE   0x2804             CMP      R0,#+4
   \   000001E0   0xF2C0 0x80E2      BLT.W    ??search_line_13
    170            {
    171               uint8 x1=0,y1=0;
   \   000001E4   0x2400             MOVS     R4,#+0
   \   000001E6   0x2500             MOVS     R5,#+0
    172               uint8 x2=0,y2=0;
   \   000001E8   0x2600             MOVS     R6,#+0
   \   000001EA   0x2700             MOVS     R7,#+0
    173               uint8 x3=0,y3=0;
   \   000001EC   0x2000             MOVS     R0,#+0
   \   000001EE   0xF88D 0x0002      STRB     R0,[SP, #+2]
   \   000001F2   0xF05F 0x0800      MOVS     R8,#+0
    174               uint8 x4=0,y4=0;
   \   000001F6   0x2000             MOVS     R0,#+0
   \   000001F8   0xF88D 0x0001      STRB     R0,[SP, #+1]
   \   000001FC   0x2000             MOVS     R0,#+0
   \   000001FE   0xF88D 0x0000      STRB     R0,[SP, #+0]
    175               uint8 fLeft_Flag=0;
   \   00000202   0xF05F 0x0900      MOVS     R9,#+0
    176               uint8 fRight_Flag=0;
   \   00000206   0xF05F 0x0A00      MOVS     R10,#+0
    177               uint8 mid=0;
   \   0000020A   0x2000             MOVS     R0,#+0
    178               
    179               float k1,k2;
    180               for(uint8 i=59;i>19;i=i-5)
   \   0000020C   0xF05F 0x0B3B      MOVS     R11,#+59
   \   00000210   0xE00A             B.N      ??search_line_14
    181               {
    182                 if((m_abs(Left_Line[i+1]-Left_Line[i]))>5)
    183                 {
    184                   x1=Left_Line[i+1];
   \                     ??search_line_15: (+1)
   \   00000212   0x....             LDR.N    R0,??DataTable2_17
   \   00000214   0xFA5F 0xFB8B      UXTB     R11,R11          ;; ZeroExt  R11,R11,#+24,#+24
   \   00000218   0xEB10 0x008B      ADDS     R0,R0,R11, LSL #+2
   \   0000021C   0x6844             LDR      R4,[R0, #+4]
    185                   y1=i;
   \   0000021E   0x465D             MOV      R5,R11
    186                   fLeft_Flag=1;
   \   00000220   0xF05F 0x0901      MOVS     R9,#+1
    187                 }
   \                     ??search_line_16: (+1)
   \   00000224   0xF1BB 0x0B05      SUBS     R11,R11,#+5
   \                     ??search_line_14: (+1)
   \   00000228   0xFA5F 0xFB8B      UXTB     R11,R11          ;; ZeroExt  R11,R11,#+24,#+24
   \   0000022C   0xF1BB 0x0F14      CMP      R11,#+20
   \   00000230   0xDB31             BLT.N    ??search_line_17
   \   00000232   0x....             LDR.N    R0,??DataTable2_17
   \   00000234   0xFA5F 0xFB8B      UXTB     R11,R11          ;; ZeroExt  R11,R11,#+24,#+24
   \   00000238   0xEB10 0x008B      ADDS     R0,R0,R11, LSL #+2
   \   0000023C   0x6840             LDR      R0,[R0, #+4]
   \   0000023E   0x....             LDR.N    R1,??DataTable2_17
   \   00000240   0xFA5F 0xFB8B      UXTB     R11,R11          ;; ZeroExt  R11,R11,#+24,#+24
   \   00000244   0xF851 0x102B      LDR      R1,[R1, R11, LSL #+2]
   \   00000248   0x1A40             SUBS     R0,R0,R1
   \   0000024A   0x.... 0x....      BL       m_abs
   \   0000024E   0x2806             CMP      R0,#+6
   \   00000250   0xDADF             BGE.N    ??search_line_15
    188                 
    189                 else if((Right_Line[i]-Right_Line[i+1])>15)
   \   00000252   0x....             LDR.N    R0,??DataTable2_16
   \   00000254   0xFA5F 0xFB8B      UXTB     R11,R11          ;; ZeroExt  R11,R11,#+24,#+24
   \   00000258   0xF850 0x002B      LDR      R0,[R0, R11, LSL #+2]
   \   0000025C   0x....             LDR.N    R1,??DataTable2_16
   \   0000025E   0xFA5F 0xFB8B      UXTB     R11,R11          ;; ZeroExt  R11,R11,#+24,#+24
   \   00000262   0xEB11 0x018B      ADDS     R1,R1,R11, LSL #+2
   \   00000266   0x6849             LDR      R1,[R1, #+4]
   \   00000268   0x1A40             SUBS     R0,R0,R1
   \   0000026A   0x2810             CMP      R0,#+16
   \   0000026C   0xDB09             BLT.N    ??search_line_18
    190                 {
    191                   x2=Right_Line[i+1];
   \   0000026E   0x....             LDR.N    R0,??DataTable2_16
   \   00000270   0xFA5F 0xFB8B      UXTB     R11,R11          ;; ZeroExt  R11,R11,#+24,#+24
   \   00000274   0xEB10 0x008B      ADDS     R0,R0,R11, LSL #+2
   \   00000278   0x6846             LDR      R6,[R0, #+4]
    192                   y2=i;
   \   0000027A   0x465F             MOV      R7,R11
    193                   fRight_Flag=1;
   \   0000027C   0xF05F 0x0A01      MOVS     R10,#+1
   \   00000280   0xE7D0             B.N      ??search_line_16
    194                 }
    195                 else if(fLeft_Flag&&fRight_Flag)
   \                     ??search_line_18: (+1)
   \   00000282   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000286   0xF1B9 0x0F00      CMP      R9,#+0
   \   0000028A   0xD0CB             BEQ.N    ??search_line_16
   \   0000028C   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   00000290   0xF1BA 0x0F00      CMP      R10,#+0
   \   00000294   0xD0C6             BEQ.N    ??search_line_16
    196                  break;       
    197               }
    198               
    199               fLeft_Flag=0;     
   \                     ??search_line_17: (+1)
   \   00000296   0xF05F 0x0900      MOVS     R9,#+0
    200               fRight_Flag=0;
   \   0000029A   0xF05F 0x0A00      MOVS     R10,#+0
    201               
    202               if(y1>=y2)//左下点y1比右下点y2 低 
   \   0000029E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000002A0   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000002A2   0x42BD             CMP      R5,R7
   \   000002A4   0xD30C             BCC.N    ??search_line_19
    203               {
    204                 mid=(Right_Line[y1]+Left_Line[y1])/2;
   \   000002A6   0x....             LDR.N    R0,??DataTable2_16
   \   000002A8   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000002AA   0xF850 0x0025      LDR      R0,[R0, R5, LSL #+2]
   \   000002AE   0x....             LDR.N    R1,??DataTable2_17
   \   000002B0   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000002B2   0xF851 0x1025      LDR      R1,[R1, R5, LSL #+2]
   \   000002B6   0x1808             ADDS     R0,R1,R0
   \   000002B8   0x2102             MOVS     R1,#+2
   \   000002BA   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000002BE   0xE00F             B.N      ??search_line_20
    205          
    206               }
    207               
    208                else    if(y1<y2)//左下点y1比右下点y2 高
   \                     ??search_line_19: (+1)
   \   000002C0   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000002C2   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000002C4   0x42BD             CMP      R5,R7
   \   000002C6   0xD20B             BCS.N    ??search_line_20
    209               {
    210                 mid=(Right_Line[y2]+Left_Line[y2])/2;
   \   000002C8   0x....             LDR.N    R0,??DataTable2_16
   \   000002CA   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000002CC   0xF850 0x0027      LDR      R0,[R0, R7, LSL #+2]
   \   000002D0   0x....             LDR.N    R1,??DataTable2_17
   \   000002D2   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000002D4   0xF851 0x1027      LDR      R1,[R1, R7, LSL #+2]
   \   000002D8   0x1808             ADDS     R0,R1,R0
   \   000002DA   0x2102             MOVS     R1,#+2
   \   000002DC   0xFB90 0xF0F1      SDIV     R0,R0,R1
    211               }
    212               
    213                      
    214                 
    215                 for(uint8 i=y1;i>19;i--)
   \                     ??search_line_20: (+1)
   \   000002E0   0x0028             MOVS     R0,R5
   \   000002E2   0xE000             B.N      ??search_line_21
   \                     ??search_line_22: (+1)
   \   000002E4   0x1E40             SUBS     R0,R0,#+1
   \                     ??search_line_21: (+1)
   \   000002E6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002E8   0x2814             CMP      R0,#+20
   \   000002EA   0xDB12             BLT.N    ??search_line_23
    216                 {
    217                   if((Left_Line[i]-Left_Line[i+1])>15)
   \   000002EC   0x....             LDR.N    R1,??DataTable2_17
   \   000002EE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002F0   0xF851 0x1020      LDR      R1,[R1, R0, LSL #+2]
   \   000002F4   0x....             LDR.N    R2,??DataTable2_17
   \   000002F6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002F8   0xEB12 0x0280      ADDS     R2,R2,R0, LSL #+2
   \   000002FC   0x6852             LDR      R2,[R2, #+4]
   \   000002FE   0x1A89             SUBS     R1,R1,R2
   \   00000300   0x2910             CMP      R1,#+16
   \   00000302   0xDBEF             BLT.N    ??search_line_22
    218                   {
    219                     y3=i;
   \   00000304   0x4680             MOV      R8,R0
    220                     x3=Left_Line[i];
   \   00000306   0x....             LDR.N    R1,??DataTable2_17
   \   00000308   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000030A   0xF851 0x0020      LDR      R0,[R1, R0, LSL #+2]
   \   0000030E   0xF88D 0x0002      STRB     R0,[SP, #+2]
    221                     break;
    222                   }
    223                 }
    224                 for(uint8 i=y2;i>19;i--)
   \                     ??search_line_23: (+1)
   \   00000312   0x0038             MOVS     R0,R7
   \   00000314   0xE000             B.N      ??search_line_24
   \                     ??search_line_25: (+1)
   \   00000316   0x1E40             SUBS     R0,R0,#+1
   \                     ??search_line_24: (+1)
   \   00000318   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000031A   0x2814             CMP      R0,#+20
   \   0000031C   0xDB13             BLT.N    ??search_line_26
    225                 {
    226                   if((Right_Line[i+1]-Right_Line[i])>15)
   \   0000031E   0x....             LDR.N    R1,??DataTable2_16
   \   00000320   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000322   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000326   0x6849             LDR      R1,[R1, #+4]
   \   00000328   0x....             LDR.N    R2,??DataTable2_16
   \   0000032A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000032C   0xF852 0x2020      LDR      R2,[R2, R0, LSL #+2]
   \   00000330   0x1A89             SUBS     R1,R1,R2
   \   00000332   0x2910             CMP      R1,#+16
   \   00000334   0xDBEF             BLT.N    ??search_line_25
    227                   {
    228                     y4=i;
   \   00000336   0xF88D 0x0000      STRB     R0,[SP, #+0]
    229                     x4=Right_Line[i];
   \   0000033A   0x....             LDR.N    R1,??DataTable2_16
   \   0000033C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000033E   0xF851 0x0020      LDR      R0,[R1, R0, LSL #+2]
   \   00000342   0xF88D 0x0001      STRB     R0,[SP, #+1]
    230                     break;
    231                   }
    232                 }
    233               
    234               k1=(y1-y3)/(x1-x3);
   \                     ??search_line_26: (+1)
   \   00000346   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000348   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000034C   0xEBB5 0x0008      SUBS     R0,R5,R8
   \   00000350   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000352   0xF89D 0x1002      LDRB     R1,[SP, #+2]
   \   00000356   0x1A61             SUBS     R1,R4,R1
   \   00000358   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000035C   0x.... 0x....      BL       __aeabi_i2f
   \   00000360   0x0004             MOVS     R4,R0
    235               k2=(y2-y4)/(x2-x4);
   \   00000362   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000364   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000368   0x1A38             SUBS     R0,R7,R0
   \   0000036A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000036C   0xF89D 0x1001      LDRB     R1,[SP, #+1]
   \   00000370   0x1A71             SUBS     R1,R6,R1
   \   00000372   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000376   0x.... 0x....      BL       __aeabi_i2f
    236               
    237               for(uint8 i=y3;y3<y1;y3++)
   \   0000037A   0x4646             MOV      R6,R8
   \   0000037C   0xE00F             B.N      ??search_line_27
    238               {
    239                 Left_Line[i]=Left_Line[i-1]+(int)k1;
   \                     ??search_line_28: (+1)
   \   0000037E   0x....             LDR.N    R0,??DataTable2_17
   \   00000380   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000382   0xEB10 0x0086      ADDS     R0,R0,R6, LSL #+2
   \   00000386   0xF850 0x7C04      LDR      R7,[R0, #-4]
   \   0000038A   0x0020             MOVS     R0,R4
   \   0000038C   0x.... 0x....      BL       __aeabi_f2iz
   \   00000390   0x19C0             ADDS     R0,R0,R7
   \   00000392   0x....             LDR.N    R1,??DataTable2_17
   \   00000394   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000396   0xF841 0x0026      STR      R0,[R1, R6, LSL #+2]
    240               }
   \   0000039A   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??search_line_27: (+1)
   \   0000039E   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000003A2   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000003A4   0x45A8             CMP      R8,R5
   \   000003A6   0xD3EA             BCC.N    ??search_line_28
    241               
    242               
    243              // Center_Line[y]=(Right_Line[y]+Left_Line[y])/2;
    244            }
    245          }
   \                     ??search_line_13: (+1)
   \   000003A8   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}   ;; return
    246          
    247           
    248          
    249          /*
    250          void  search_line(void)
    251          {
    252            uint8 Left_End=0;//有效结束行
    253            uint8 Right_End=0;
    254            
    255            uint8 Left_Valid_Count=0;//默认左边沿有效连续计数值为0
    256            uint8 Right_Valid_Count=0;//默认右边沿有效连续计数值为0
    257            
    258            uint8 Left_Invalid_Count=0;//默认左边沿无效连续计数值为0
    259            uint8 Right_Invalid_Count=0;//默认右边沿无效连续计数值为0
    260            
    261            uint8 Left_Turn_Count=0;//收敛方向异常连续计数
    262            uint8 Right_Turn_Count=0;
    263            
    264            uint8 Left_Break=0;
    265            uint8 Right_Break=0;
    266            
    267            uint8 Cross_Flag=0;//默认无十字
    268            Left_flag=0;
    269            Right_flag=0;
    270          
    271            //前3行
    272            for(uint8 i=59;i>56;i--)
    273            {
    274              Left_Line[i]=1;//初始化左黑线为1
    275              Right_Line[i]=78;//初始化右黑线为78
    276              Left_Valid[i]=0;//默认左边未找到黑线
    277              Right_Valid[i]=0;//默认右边未找到黑线
    278              Center_Line[i]=40;//默认中线为图像中间
    279              //从中间到左
    280              for(uint8 j=40;j>0;j--)
    281              {
    282                if(Img[i][j]==white&&Img[i][j-2]==black)
    283                {
    284                  Left_Line[i]=j;//黑线位置
    285                  Left_Valid[i]=1;//此行左黑线有效位置1
    286                  Left_Valid_Count++;//连续有效行+1
    287                  Left_Invalid_Count=0;
    288                  break;
    289                }
    290              }
    291              
    292              if(Left_Valid[i]==0)
    293              {
    294                Left_Valid_Count=0;
    295                Left_Invalid_Count++;
    296              }
    297              
    298              //从中间到右边
    299              for(uint8 k=40;k<80;k++)
    300              {
    301                if(Img[i][k]==white&&Img[i][k+2]==black)
    302                {
    303                  Right_Line[i]=k;
    304                  Right_Valid[i]=1;
    305                  Right_Valid_Count++;
    306                  Right_Invalid_Count=0;
    307                  break;
    308                }
    309              }
    310              if(Right_Valid[i]==0)
    311              {
    312                Right_Valid_Count=0;
    313                Right_Invalid_Count++;
    314              }
    315              
    316              
    317              
    318              Center_Line[i]=(Right_Line[i]+Left_Line[i])/2;
    319            }
    320            
    321            
    322            if(Left_Valid_Count==3&&Right_Valid_Count==3)
    323            {
    324              for(uint8 i=56;i>29;i--)
    325              {
    326                uint8 col;
    327                
    328                //中间往左
    329                Left_Line[i]=1;//初始化为1
    330                Left_Valid[i]=0;//初始化每行无效
    331                
    332                col=Left_Line[i+1]+6;//具体数值还需视情况而定
    333                Left_End=Left_Line[i+1]-6;
    334                
    335              //  for(;col>Left_End;col--)     
    336                for(uint8 m=40;m>0;m--)
    337                {
    338                  if(Img[i][col]==white&&Img[i][col-2]==black)
    339                  {
    340                    Left_Line[i]=col;//黑线位置
    341                      Left_flag=1;
    342                    Left_Invalid_Count=0;//左线连续无效值清零
    343                    if(Left_Line[i]<Left_Line[i+1])//出现左线异常不向右收敛
    344                    {
    345                      Left_Turn_Count++;//左线收敛方向异常连续计数+1
    346                      Left_Valid[i]=1;//暂时标记此行左黑线有效位置1
    347                      break;
    348                    }
    349                    else//左线正常向右收敛
    350                    {
    351                      Left_Turn_Count=0;//左线收敛方向异常连续计数值清零
    352                      Left_Valid[i]=1;//此行左黑线有效位置1
    353                      break;
    354                    }
    355                  }
    356                  else 
    357                    Left_Line[m]=0;
    358                }
    359                if(Left_Valid[i]==0)//此行没有找到左黑线
    360                  Left_Invalid_Count++;
    361                if(Left_Turn_Count==3)//左黑线收敛方向异常进一步判断是否为斜入十字
    362                {
    363                  //继续判断十字
    364                }
    365                if(Left_Invalid_Count==3)
    366                {
    367                  Left_Break=i+3;//左边黑线断点行记录
    368                  break;//跳出大循环，停止搜线
    369                }
    370                
    371                
    372                
    373                Right_Line[i]=78;
    374                Right_Valid[i]=0;
    375                
    376                col=Right_Line[i+1]-6;
    377                Right_End=Right_Line[i+1]+6;
    378                
    379               // for(;col<Right_End;col++)
    380                for(uint8 n=40;n<78;n++)
    381                {
    382                  if(Img[i][col]==white&&Img[i][col+2]==black)
    383                  {
    384                    Right_Line[i]=col;
    385                     Right_flag=1;
    386                    Right_Invalid_Count=0;
    387                    if(Right_Line[i]>Right_Line[i+1])
    388                    {
    389                      Right_Turn_Count++;
    390                      Right_Valid[i]=1;
    391                      break;
    392                    }
    393                    else
    394                    {
    395                      Right_Turn_Count=0;
    396                      Right_Valid[i]=1;
    397                      break;
    398                    }
    399                  }
    400                  else
    401                    Right_Line[n]=79;
    402                }
    403                if(Right_Valid[i]==0)
    404                  Right_Invalid_Count++;
    405                if(Right_Turn_Count==3)
    406                {
    407                  //继续判断十字
    408                }
    409                if(Right_Invalid_Count==3)
    410                {
    411                  Right_Break=i+3;
    412                  break;
    413                }
    414                if(Right_flag&&Left_flag)
    415                  Center_Line[i]=(Right_Line[i]+Left_Line[i])/2;
    416                else if(!Left_flag&&Right_flag)//左转
    417                  Center_Line[i]=Right_Line[i]-(Right_Line[i+1]-Center_Line[i+1]);
    418                else if(Left_flag&&!Right_flag)//右转
    419                  Center_Line[i]=Left_Line[i]+(Center_Line[i+1]-Left_Line[i+1]);
    420              }
    421              
    422            }
    423          }
    424          */
    425                      
    426                      
    427                      

   \                                 In section .text, align 2, keep-with-next
    428           uint8 m_abs(int m)
    429           {
    430             if(m>0)
   \                     m_abs: (+1)
   \   00000000   0x2801             CMP      R0,#+1
   \   00000002   0xDB01             BLT.N    ??m_abs_0
    431               return m;
   \   00000004   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000006   0xE001             B.N      ??m_abs_1
    432             else 
    433               return (-m);
   \                     ??m_abs_0: (+1)
   \   00000008   0x4240             RSBS     R0,R0,#+0
   \   0000000A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \                     ??m_abs_1: (+1)
   \   0000000C   0x4770             BX       LR               ;; return
    434           }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x400B8000         DC32     0x400b8000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     steering_init_struct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     steering_middle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x........         DC32     turn

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x........         DC32     last_turn

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x........         DC32     Center_Line

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x........         DC32     turn1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x........         DC32     turn2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0x........         DC32     D_value

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_9:
   \   00000000   0x........         DC32     turn_left

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_10:
   \   00000000   0x........         DC32     turn_right

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_11:
   \   00000000   0x........         DC32     steering_p

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_12:
   \   00000000   0x41A00000         DC32     0x41a00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_13:
   \   00000000   0x........         DC32     steering_out

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_14:
   \   00000000   0x........         DC32     steering_left

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_15:
   \   00000000   0x........         DC32     steering_right

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_16:
   \   00000000   0x........         DC32     Right_Line

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_17:
   \   00000000   0x........         DC32     Left_Line

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_18:
   \   00000000   0x........         DC32     straight_cross

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_19:
   \   00000000   0x........         DC32     Left_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_20:
   \   00000000   0x........         DC32     Right_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_21:
   \   00000000   0x........         DC32     Img

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   m_abs
      40   search_line
        40   -> __aeabi_f2iz
        40   -> __aeabi_i2f
        40   -> m_abs
      16   steering_control
        16   -> LCD_Write_Float_Dot
        16   -> LPLD_FTM_PWM_ChangeDuty
        16   -> __aeabi_f2iz
        16   -> __aeabi_fadd
        16   -> __aeabi_fmul
        16   -> __aeabi_fsub
        16   -> __aeabi_i2f
        16   -> search_line
        16 __aeabi_cfrcmple
      32   steering_init
        16   -> LPLD_FTM_Init
        16   -> LPLD_FTM_PWM_Enable
        32   -> __aeabi_memcpy4


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_10
       4  ??DataTable2_11
       4  ??DataTable2_12
       4  ??DataTable2_13
       4  ??DataTable2_14
       4  ??DataTable2_15
       4  ??DataTable2_16
       4  ??DataTable2_17
       4  ??DataTable2_18
       4  ??DataTable2_19
       4  ??DataTable2_2
       4  ??DataTable2_20
       4  ??DataTable2_21
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  ??DataTable2_9
       4  D_value
       4  D_value_old
      60  Left_Valid
       1  Left_flag
       1  Left_turnmax
      60  Right_Valid
       1  Right_flag
       1  Right_turnmax
       4  last_turn
      14  m_abs
     940  search_line
     478  steering_control
      72  steering_init
      28  steering_init_struct
       1  straight_cross
       4  turn
       4  turn1
       4  turn2

 
   177 bytes in section .bss
 1 592 bytes in section .text
 
 1 592 bytes of CODE memory
   177 bytes of DATA memory

Errors: none
Warnings: 4
