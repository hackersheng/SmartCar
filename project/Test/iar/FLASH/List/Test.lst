###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.3.8024/W32 for ARM        18/Jul/2016  19:48:28
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\whstarlit\Desktop\Smart_Car\project\Test\app\Test.c
#    Command line =  
#        C:\Users\whstarlit\Desktop\Smart_Car\project\Test\app\Test.c -D
#        LPLD_K60 -D USE_K60D10 -lCN
#        C:\Users\whstarlit\Desktop\Smart_Car\project\Test\iar\FLASH\List\ -lB
#        C:\Users\whstarlit\Desktop\Smart_Car\project\Test\iar\FLASH\List\ -o
#        C:\Users\whstarlit\Desktop\Smart_Car\project\Test\iar\FLASH\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        D:\IAR\arm\INC\c\DLib_Config_Normal.h -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\Test\iar\..\app\ -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\Test\iar\..\..\..\lib\CPU\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\Test\iar\..\..\..\lib\common\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\Test\iar\..\..\..\lib\LPLD\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\Test\iar\..\..\..\lib\LPLD\HW\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\Test\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\Test\iar\..\..\..\lib\LPLD\FUNC\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\Test\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\Test\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\Test\iar\..\..\..\lib\FatFs\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\Test\iar\..\..\..\lib\FatFs\option\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\Test\iar\..\..\..\lib\USB\common\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\Test\iar\..\..\..\lib\USB\driver\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\Test\iar\..\..\..\lib\USB\descriptor\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\Test\iar\..\..\..\lib\USB\class\
#        -I C:\Users\whstarlit\Desktop\Smart_Car\lib\ -Ol -I
#        D:\IAR\arm\CMSIS\Include\ -D ARM_MATH_CM4
#    List file    =  
#        C:\Users\whstarlit\Desktop\Smart_Car\project\Test\iar\FLASH\List\Test.lst
#    Object file  =  
#        C:\Users\whstarlit\Desktop\Smart_Car\project\Test\iar\FLASH\Obj\Test.o
#
###############################################################################

C:\Users\whstarlit\Desktop\Smart_Car\project\Test\app\Test.c
      1          #include "include.h"
      2          
      3          

   \                                 In section .text, align 4, keep-with-next
      4          void main (void)
      5          {
   \                     main: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
      6            init_all();
   \   00000002   0x.... 0x....      BL       init_all
      7            while(1)
      8            {
      9              keyValue = 0;
   \                     ??main_0: (+1)
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x4938             LDR.N    R1,??main_1
   \   0000000A   0x7008             STRB     R0,[R1, #+0]
     10              keyValue = key_scan();
   \   0000000C   0x.... 0x....      BL       key_scan
   \   00000010   0x4936             LDR.N    R1,??main_1
   \   00000012   0x7008             STRB     R0,[R1, #+0]
     11             
     12              changeVar(keyValue);
   \   00000014   0x4835             LDR.N    R0,??main_1
   \   00000016   0x7800             LDRB     R0,[R0, #+0]
   \   00000018   0x.... 0x....      BL       changeVar
     13              
     14              get_img();
   \   0000001C   0x.... 0x....      BL       get_img
     15              LED_PrintImage(*Img, 60, 80);
   \   00000020   0x2250             MOVS     R2,#+80
   \   00000022   0x213C             MOVS     R1,#+60
   \   00000024   0x4832             LDR.N    R0,??main_1+0x4
   \   00000026   0x.... 0x....      BL       LED_PrintImage
     16              
     17              LCD_Write_Float_Dot(0, 0, P, 0);
   \   0000002A   0x2300             MOVS     R3,#+0
   \   0000002C   0x4831             LDR.N    R0,??main_1+0x8
   \   0000002E   0x6802             LDR      R2,[R0, #+0]
   \   00000030   0x2100             MOVS     R1,#+0
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0x.... 0x....      BL       LCD_Write_Float_Dot
     18              LCD_Write_Float_Dot(40, 0, D, 0);
   \   00000038   0x2300             MOVS     R3,#+0
   \   0000003A   0x482F             LDR.N    R0,??main_1+0xC
   \   0000003C   0x6802             LDR      R2,[R0, #+0]
   \   0000003E   0x2100             MOVS     R1,#+0
   \   00000040   0x2028             MOVS     R0,#+40
   \   00000042   0x.... 0x....      BL       LCD_Write_Float_Dot
     19              LCD_Write_Float_Dot(0, 1, index1, 0);
   \   00000046   0x2300             MOVS     R3,#+0
   \   00000048   0x001C             MOVS     R4,R3
   \   0000004A   0x482C             LDR.N    R0,??main_1+0x10
   \   0000004C   0x6800             LDR      R0,[R0, #+0]
   \   0000004E   0x.... 0x....      BL       __aeabi_i2f
   \   00000052   0x0002             MOVS     R2,R0
   \   00000054   0x0023             MOVS     R3,R4
   \   00000056   0x2101             MOVS     R1,#+1
   \   00000058   0x2000             MOVS     R0,#+0
   \   0000005A   0x.... 0x....      BL       LCD_Write_Float_Dot
     20              LCD_Write_Float_Dot(40, 1, index2, 0);
   \   0000005E   0x2300             MOVS     R3,#+0
   \   00000060   0x001C             MOVS     R4,R3
   \   00000062   0x4827             LDR.N    R0,??main_1+0x14
   \   00000064   0x6800             LDR      R0,[R0, #+0]
   \   00000066   0x.... 0x....      BL       __aeabi_i2f
   \   0000006A   0x0002             MOVS     R2,R0
   \   0000006C   0x0023             MOVS     R3,R4
   \   0000006E   0x2101             MOVS     R1,#+1
   \   00000070   0x2028             MOVS     R0,#+40
   \   00000072   0x.... 0x....      BL       LCD_Write_Float_Dot
     21              
     22              LCD_Write_Float_Dot(88, 0, curAver, 0);
   \   00000076   0x2300             MOVS     R3,#+0
   \   00000078   0x001C             MOVS     R4,R3
   \   0000007A   0x4822             LDR.N    R0,??main_1+0x18
   \   0000007C   0x6800             LDR      R0,[R0, #+0]
   \   0000007E   0x.... 0x....      BL       __aeabi_i2f
   \   00000082   0x0002             MOVS     R2,R0
   \   00000084   0x0023             MOVS     R3,R4
   \   00000086   0x2100             MOVS     R1,#+0
   \   00000088   0x2058             MOVS     R0,#+88
   \   0000008A   0x.... 0x....      BL       LCD_Write_Float_Dot
     23              
     24              LCD_Write_Float_Dot(88, 3, midDot[Line2], 0);
   \   0000008E   0x2300             MOVS     R3,#+0
   \   00000090   0x001C             MOVS     R4,R3
   \   00000092   0x481D             LDR.N    R0,??main_1+0x1C
   \   00000094   0x491D             LDR.N    R1,??main_1+0x20
   \   00000096   0x6809             LDR      R1,[R1, #+0]
   \   00000098   0xF850 0x0021      LDR      R0,[R0, R1, LSL #+2]
   \   0000009C   0x.... 0x....      BL       __aeabi_i2f
   \   000000A0   0x0002             MOVS     R2,R0
   \   000000A2   0x0023             MOVS     R3,R4
   \   000000A4   0x2103             MOVS     R1,#+3
   \   000000A6   0x2058             MOVS     R0,#+88
   \   000000A8   0x.... 0x....      BL       LCD_Write_Float_Dot
     25          
     26              
     27              LCD_Write_Float_Dot(88, 5, crossScale, 1);
   \   000000AC   0x2301             MOVS     R3,#+1
   \   000000AE   0x4818             LDR.N    R0,??main_1+0x24
   \   000000B0   0x6802             LDR      R2,[R0, #+0]
   \   000000B2   0x2105             MOVS     R1,#+5
   \   000000B4   0x2058             MOVS     R0,#+88
   \   000000B6   0x.... 0x....      BL       LCD_Write_Float_Dot
     28              LCD_Write_Float_Dot(88, 6, runwayType, 0);
   \   000000BA   0x2300             MOVS     R3,#+0
   \   000000BC   0x001C             MOVS     R4,R3
   \   000000BE   0x4815             LDR.N    R0,??main_1+0x28
   \   000000C0   0x6800             LDR      R0,[R0, #+0]
   \   000000C2   0x.... 0x....      BL       __aeabi_i2f
   \   000000C6   0x0002             MOVS     R2,R0
   \   000000C8   0x0023             MOVS     R3,R4
   \   000000CA   0x2106             MOVS     R1,#+6
   \   000000CC   0x2058             MOVS     R0,#+88
   \   000000CE   0x.... 0x....      BL       LCD_Write_Float_Dot
     29              LCD_Write_Float_Dot(88, 7, SPEED, 0);
   \   000000D2   0x2300             MOVS     R3,#+0
   \   000000D4   0x001C             MOVS     R4,R3
   \   000000D6   0x4810             LDR.N    R0,??main_1+0x2C
   \   000000D8   0x6800             LDR      R0,[R0, #+0]
   \   000000DA   0x.... 0x....      BL       __aeabi_i2f
   \   000000DE   0x0002             MOVS     R2,R0
   \   000000E0   0x0023             MOVS     R3,R4
   \   000000E2   0x2107             MOVS     R1,#+7
   \   000000E4   0x2058             MOVS     R0,#+88
   \   000000E6   0x.... 0x....      BL       LCD_Write_Float_Dot
   \   000000EA   0xE78C             B.N      ??main_0
   \                     ??main_1:
   \   000000EC   0x........         DC32     keyValue
   \   000000F0   0x........         DC32     Img
   \   000000F4   0x........         DC32     P
   \   000000F8   0x........         DC32     D
   \   000000FC   0x........         DC32     index1
   \   00000100   0x........         DC32     index2
   \   00000104   0x........         DC32     curAver
   \   00000108   0x........         DC32     midDot
   \   0000010C   0x........         DC32     Line2
   \   00000110   0x........         DC32     crossScale
   \   00000114   0x........         DC32     runwayType
   \   00000118   0x........         DC32     SPEED
     30              
     31          //    n++;
     32          //    m = LPLD_FTM_GetCounter(FTM1);
     33          //    if (n >= 3)
     34          //    {
     35          //      LPLD_FTM_ClearCounter(FTM1);
     36          //    }
     37            } 
     38          }
     39          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   main
         8   -> LCD_Write_Float_Dot
         8   -> LED_PrintImage
         8   -> __aeabi_i2f
         8   -> changeVar
         8   -> get_img
         8   -> init_all
         8   -> key_scan


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     284  main

 
 284 bytes in section .text
 
 284 bytes of CODE memory

Errors: none
Warnings: none
