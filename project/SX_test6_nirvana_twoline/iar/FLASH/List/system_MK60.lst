###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.3.8024/W32 for ARM        14/Jul/2016  20:01:09
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  C:\Users\whstarlit\Desktop\Smart_Car\lib\CPU\system_MK60.c
#    Command line =  
#        C:\Users\whstarlit\Desktop\Smart_Car\lib\CPU\system_MK60.c -D LPLD_K60
#        -D USE_K60D10 -lCN
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\FLASH\List\
#        -lB
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\FLASH\List\
#        -o
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\FLASH\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        D:\IAR\arm\INC\c\DLib_Config_Normal.h -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\..\app\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\..\..\..\lib\CPU\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\..\..\..\lib\common\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\..\..\..\lib\LPLD\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\..\..\..\lib\LPLD\HW\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\..\..\..\lib\LPLD\DEV\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\..\..\..\lib\LPLD\FUNC\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\..\..\..\lib\uCOS-II\Ports\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\..\..\..\lib\uCOS-II\Source\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\..\..\..\lib\FatFs\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\..\..\..\lib\FatFs\option\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\..\..\..\lib\USB\common\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\..\..\..\lib\USB\driver\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\..\..\..\lib\USB\descriptor\
#        -I
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\..\..\..\lib\USB\class\
#        -Ol -I D:\IAR\arm\CMSIS\Include\ -D ARM_MATH_CM4
#    List file    =  
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\FLASH\List\system_MK60.lst
#    Object file  =  
#        C:\Users\whstarlit\Desktop\Smart_Car\project\SX_test6_nirvana_twoline\iar\FLASH\Obj\system_MK60.o
#
###############################################################################

C:\Users\whstarlit\Desktop\Smart_Car\lib\CPU\system_MK60.c
      1          /**
      2           * @file system_MK60DZ10.c
      3           * @version 1.2.1[By LPLD]
      4           * @date 2013-06-18
      5           * @brief MK60DZ10系列单片机系统配置文件
      6           *
      7           * 更改建议:禁止修改
      8           *
      9           * 该代码提供系统配置函数以及一个储存系统主频的全局变量。
     10           * 配置函数主要负责建立系统各模块的时钟。
     11           * 代码还实现常见的系统中断函数。
     12           *
     13           * 版权所有:北京拉普兰德电子技术有限公司
     14           * http://www.lpld.cn
     15           * mail:support@lpld.cn
     16           *
     17           * @par
     18           * 本代码由拉普兰德[LPLD]开发并维护，并向所有使用者开放源代码。
     19           * 开发者可以随意修使用或改源代码。但本段及以上注释应予以保留。
     20           * 不得更改或删除原版权所有者姓名，二次开发者可以加注二次版权所有者。
     21           * 但应在遵守此协议的基础上，开放源代码、不得出售代码本身。
     22           * 拉普兰德不负责由于使用本代码所带来的任何事故、法律责任或相关不良影响。
     23           * 拉普兰德无义务解释、说明本代码的具体原理、功能、实现方法。
     24           * 除非拉普兰德[LPLD]授权，开发者不得将本代码用于商业产品。
     25           */
     26          
     27          #include <stdint.h>
     28          #include "common.h"
     29          
     30          #define DISABLE_WDOG    1
     31          
     32          /*----------------------------------------------------------------------------
     33            定义时钟相关值
     34           *----------------------------------------------------------------------------*/
     35          #define CPU_XTAL_CLK_HZ                 50000000u       //外部有源晶振频率，单位Hz
     36          #define CPU_XTAL32k_CLK_HZ              32768u          //外部32k时钟晶振频率，单位Hz    
     37          #define CPU_INT_SLOW_CLK_HZ             32768u          //慢速内部振荡器的值，单位Hz
     38          #define CPU_INT_FAST_CLK_HZ             4000000u        //快速内部振荡器的值，单位Hz
     39          #define DEFAULT_SYSTEM_CLOCK            100000000u      //默认系统主频，单位Hz
     40          
     41          /**
     42           * @brief 系统主频（单位Hz）
     43           */
     44          uint32_t SystemCoreClock = DEFAULT_SYSTEM_CLOCK;
     45          
     46          /**
     47           * 初始化系统
     48           *
     49           * @param  none
     50           * @return none
     51           *
     52           * @brief  初始化MCU硬件系统，包括开放IO时钟、初始化主频、初始化调试串口，
     53           *         打印调试信息。SystemInit由MCU启动文件调用。
     54           *         
     55           */
     56          void SystemInit (void) {
     57            UART_InitTypeDef term_port_structure;
     58            //使能全部IO时钟
     59            SIM->SCGC5 |= (SIM_SCGC5_PORTA_MASK
     60                        | SIM_SCGC5_PORTB_MASK
     61                        | SIM_SCGC5_PORTC_MASK
     62                        | SIM_SCGC5_PORTD_MASK
     63                        | SIM_SCGC5_PORTE_MASK );
     64          #if (DISABLE_WDOG)
     65            //禁用看门狗模块
     66            /* WDOG_UNLOCK: WDOGUNLOCK=0xC520 */
     67            WDOG->UNLOCK = (uint16_t)0xC520u;     /* Key 1 */
     68            /* WDOG_UNLOCK : WDOGUNLOCK=0xD928 */
     69            WDOG->UNLOCK  = (uint16_t)0xD928u;    /* Key 2 */
     70            /* WDOG_STCTRLH: ??=0,DISTESTWDOG=0,BYTESEL=0,TESTSEL=0,TESTWDOG=0,??=0,STNDBYEN=1,WAITEN=1,STOPEN=1,DBGEN=0,ALLOWUPDATE=1,WINEN=0,IRQRSTEN=0,CLKSRC=1,WDOGEN=0 */
     71            WDOG->STCTRLH = (uint16_t)0x01D2u;
     72          #endif /* (DISABLE_WDOG) */
     73            
     74            //将中断向量表、需在RAM中运行的函数等数据拷贝到RAM中
     75            common_relocate();
     76            
     77            //初始化各部分时钟：系统内核主频、总线时钟、FlexBus时钟、Flash时钟
     78            LPLD_PLL_Setup(CORE_CLK_MHZ);
     79            
     80            //更新内核主频
     81            SystemCoreClockUpdate();
     82            
     83            //获取各部分时钟
     84            g_core_clock = SystemCoreClock;
     85            g_bus_clock = g_core_clock / ((uint32_t)((SIM->CLKDIV1 & SIM_CLKDIV1_OUTDIV2_MASK) >> SIM_CLKDIV1_OUTDIV2_SHIFT)+ 1u);
     86            g_flexbus_clock =  g_core_clock / ((uint32_t)((SIM->CLKDIV1 & SIM_CLKDIV1_OUTDIV3_MASK) >> SIM_CLKDIV1_OUTDIV3_SHIFT)+ 1u);
     87            g_flash_clock =  g_core_clock / ((uint32_t)((SIM->CLKDIV1 & SIM_CLKDIV1_OUTDIV4_MASK) >> SIM_CLKDIV1_OUTDIV4_SHIFT)+ 1u);
     88            
     89            //初始化用于打印调试信息的串口模块
     90            //TERM_PORT为UART通道，在k60_card.h中定义
     91            //TERMINAL_BAUD为UART波特率，在k60_card.h中定义
     92            term_port_structure.UART_Uartx = TERM_PORT;
     93            term_port_structure.UART_BaudRate = TERMINAL_BAUD;
     94            LPLD_UART_Init(term_port_structure);
     95            
     96            //打印系统调试信息
     97          #ifdef DEBUG_PRINT     
     98            printf("\r\n");   
     99            printf("*********** 基于拉普兰德K60底层库 http://www.lpld.cn ***********\r\n");
    100            printf("OSKinetis固件库版本:%s\tmail:support@lpld.cn\r\n", OSKinetis_Version);
    101            printf("系统内核时钟:%dMHz\t总线时钟:%dMHz\r\n", g_core_clock/1000000u, g_bus_clock/1000000u);
    102            printf("FlexBus时钟:%dMHz\tFlash时钟:%dMHz\r\n", g_flexbus_clock/1000000u, g_flash_clock/1000000u);
    103            printf("系统启动完毕，若要禁用调试输出请定义PRINT_ON_OFF为1(k60_card.h)\r\n");
    104            printf("********************************************************************\r\n");
    105          #endif
    106            
    107          }
    108          
    109          /**
    110           * 更新SystemCoreClock
    111           *
    112           * @param  none
    113           * @return none
    114           *
    115           * @brief  更新全局变量SystemCoreClock的值，以便获取最新的系统内核频率。
    116           *         
    117           */
    118          void SystemCoreClockUpdate (void) {
    119            uint32_t temp;
    120            temp =  CPU_XTAL_CLK_HZ *((uint32_t)(MCG->C6 & MCG_C6_VDIV_MASK) + 24u );
    121            temp = (uint32_t)(temp/((uint32_t)(MCG->C5 & MCG_C5_PRDIV_MASK) +1u ));
    122            SystemCoreClock = temp;
    123          }
    124          
    125          /**
    126           * 硬件错误中断函数
    127           *
    128           * @param  none
    129           * @return none
    130           *
    131           * @brief  触发此中断的原因一般为：模块使用未初始化、错误的寻址空间等。
    132           *         
    133           */
    134          void HardFault_Handler(void)
    135          {
    136          #ifdef DEBUG_PRINT 
    137             printf("\r\n****内核发生硬件错误*****\r\n");
    138          #endif
    139             return;
    140          }
    141          
    142          /**
    143           * 默认中断函数
    144           *
    145           * @param  none
    146           * @return none
    147           *
    148           * @brief  未定义中断处理函数的中断源会进入此函数，并打印中断向量号。
    149           *         
    150           */
    151          void DefaultISR(void)
    152          {
    153             #define VECTORNUM                     (*(volatile uint8_t*)(0xE000ED04)) 
    154          #ifdef DEBUG_PRINT 
    155             printf("\r\n****进入未定义中断,Interrupt Number %d*****\r\n",VECTORNUM-16);
    156          #endif
    157             return;
    158          }
    159          
    160          /**
    161           * 初始化操作系统的滴答定时器(OS Tick)
    162           *
    163           * @param  none
    164           * @return none
    165           *
    166           * @brief  该函数仅在uC/OS等系统中调用，切必须在OSStart()和处理器初始化后调用
    167           *         
    168           */
    169          #if UCOS_II > 0u
    170          void SystemTickInit (void)
    171          {
    172            uint32  cpu_clk_freq;
    173            uint32  cnts;
    174          
    175            cpu_clk_freq = g_core_clock;  //获取SysTick时钟
    176          
    177          #if (OS_VERSION >= 30000u)
    178            cnts  = cpu_clk_freq / (uint32)OSCfg_TickRate_Hz;    
    179          #else
    180            cnts  = cpu_clk_freq / (uint32)OS_TICKS_PER_SEC;        
    181          #endif
    182          
    183            OS_CPU_SysTickInit(cnts);     //初始化uCOS滴答定时器SysTick
    184          }
    185          #endif
    186          

Errors: 2
Warnings: none
